---
title: "Northwest Syria Cash Working Group Earthquake Response Bulletin"
date:  "`r format(Sys.time(), '%d %B, %Y')`"
author: "This is a PDF of an online report. Click [here](https://northwest-syria-cash-working-group.github.io/nws_syria_cash_reporting/) to access it"
output:
  pdf_document:
    toc: yes
    number_sections: FALSE
    toc_depth: 4
always_allow_html: yes
urlcolor: blue
linkcolor: red
header-includes: 
- \usepackage{float}

---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, fig.width=9, message = FALSE, warning=FALSE)
library(tidyverse)
library(readxl)
library(lubridate)
library(stringi)
library(pander)
library(janitor)
library(scales)
library(magrittr)
library(viridis)
library(patchwork)
library(DT)
library(sf)
library(plotly)
library(flextable)
library(ggrepel)
library(magrittr)

theme_set(theme_light())

# disabling scientific notation
options(scipen = 100)

# pander tables all in one row
panderOptions('table.split.table', Inf)

# pander thousands separator
panderOptions("big.mark", ",")

# replace 
opts <- options(knitr.kable.NA = "")

`%out%` <- Negate(`%in%`)

# function for transposing df
transpose_df <- function(df) {
  t_df <- data.table::transpose(df)
  colnames(t_df) <- rownames(df)
  rownames(t_df) <- colnames(df)
  t_df <- t_df %>%
    tibble::rownames_to_column(.data = .) %>%
    tibble::as_tibble(.)
  return(t_df)
}

# function beneficiary summaries
sum_ben <- function(df, column_var){
  
  column_var <- enquo(column_var)
  
  df %>%
    group_by(!!column_var) %>% # must add bang-bang
    summarise(beneficiaries = sum(new_beneficiaries, na.rm = TRUE)) %>% 
    arrange(desc(beneficiaries))
    
}

# function beneficiary summaries, 2 grouped variables
sum_ben2 <- function(df, column_var1, column_var2){
  
  column_var1 <- enquo(column_var1)
  column_var2 <- enquo(column_var2)
  
  df %>%
    group_by(!!column_var1, !!column_var2) %>% # must add bang-bang
    summarise(beneficiaries = sum(new_beneficiaries, na.rm = TRUE), .groups = "drop")
    
}

# scaling functions 
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}

#mode function 
mode <- function(x) {
  ux <- unique(x)
  ux[which.max(tabulate(match(x, ux)))]
}

set_flextable_defaults(fonts_ignore = TRUE)

knitr::opts_chunk$set(ft.tabcolsep=0, ft.latex.float = "none")

```

```{r data}
pcode3_shape <- 
  sf::st_read("./data/syr_admbnda_uncs_unocha_20201217/syr_admbnda_adm3_uncs_unocha_20201217.shp", 
          quiet = TRUE)

locations <- read_excel("./data/Locations.xlsx") %>% 
  clean_names()

fsl <- read_csv("./data/for_report/fsl.csv") %>% 
  mutate(partner_code = ifelse(is.na(partner_code), "temp_1", partner_code))

sites <- read_csv("./data/for_report/sites.csv")

remove_sites <- read_csv("./data/for_report/sites_locations_fsl.csv") %>%
  filter(!is.na(longitude_x) & !is.na(latitude_y)) %>% 
  st_as_sf(coords = c("longitude_x", "latitude_y"), crs = 4326) %>%
  st_transform(st_crs(pcode3_shape)) %>% 
  mutate(intersection = as.integer(st_intersects(geometry, pcode3_shape)), 
         area = ifelse(is.na(intersection), "", pcode3_shape$ADM3_PCODE[intersection])) %>%
  filter(is.na(intersection)) 

sites_locations_fsl <- read_csv("./data/for_report/sites_locations_fsl.csv") %>% 
  anti_join(remove_sites, by = c("site_name"))

names_eq <- c(
  "date",
  "governorate",
  "district",
  "sub_district",
  "community",
  "admin4",
  "casualties",
  "injuries",
  "completely_destroyed_houses",
  "damaged_unihabitable_houses",
  "temporary_accommodation_centres",
  "idps_in_all_centres",
  "schools_as_accomodation_centres",
  "idps_in_schools",
  "tents_needed",
  "blankets_mattresses_needed",
  "temporary_accommodation_centres_available", 
  "accessible_civil_defense",
  "latrines_available",
  "meals_needed_per_day",
  "need_blood_donations",
  "health_services_available",
  "necessary_medical_equipment",
  "rubble_volunteers",
  "telecoms_available",
  "electricity_available", 
  "heating_fuel_needed"
)

eq <- read_excel("./data/syria-earthquake-impact-05-march-2023.xlsx",
                 sheet = "DATASET") %>% 
  setNames(names_eq) %>% 
  left_join(locations %>% select(admin4pcode, admin3pcode), 
            by = c("admin4" = "admin4pcode"))


hno <- read_excel("./data/2023HNO_PiN_Severity_detailedAoI_FORSHARE 15032023.xlsx", skip = 1, 
                  sheet = 1) %>%
  clean_names()

nw_pcode3 <- hno %>% 
  filter(ao_c == "NW") %>% 
  pull(admin3pcode)

# nw_pcode3 %>% 
#   as_tibble() %>% 
#   write_csv("nw_pcode3.csv")
```



<br><br><br>

\newpage

# 1. MPC response overview

As of 23 March 2023, a total of `r fsl %>% filter(activity == "Cash Response" & planned_implemented == "Implemented") %>% {sum(.$beneficiaries)} %>% format(big.mark = ",")` persons or `r fsl %>% filter(activity == "Cash Response" & planned_implemented == "Implemented") %>% {sum(.$families)} %>% format(big.mark = ",")` families have been reached by MPC interventions. 
A total of USD `r paste(format(round((fsl %>% filter(activity == "Cash Response" & planned_implemented == "Implemented") %>% mutate(usd_total = families * quantity) %>%  {sum(.$usd_total)}) / 1000000, 1), trim = TRUE), "million")` has been disbursed by `r fsl %>% filter(activity == "Cash Response" & planned_implemented == "Implemented") %>% summarise(n_distinct(partner_code)) %>% pull()` implementing agencies across `r fsl %>% filter(activity == "Cash Response" & planned_implemented == "Implemented") %>% summarise(n_distinct(admin3pcode)) %>% pull()` sub-districts. 

Only beneficiaries who have received at least USD 100/family/month have been included.


<br>

```{r summary table}
fsl %>% 
  filter(activity == "Cash Response" & planned_implemented == "Implemented") %>%
  mutate(usd_total = families * quantity) %>% 
  group_by(governorate, district) %>% 
  summarise(partners = n_distinct(partner_code), 
            communities = n_distinct(admin4pcode), 
            households = sum(families, na.rm = TRUE), 
            beneficiaries = sum(beneficiaries, na.rm = TRUE), 
            total_usd = sum(usd_total, na.rm = TRUE)) %>% 
  ungroup() %>% 
  mutate(`%_beneficiaries` = 
           round(beneficiaries / sum(beneficiaries, na.rm = TRUE) * 100, digits = 2)) %>%
  adorn_totals("row",,,, households, beneficiaries, total_usd, `%_beneficiaries`) %>% 
  mutate(`%_beneficiaries` = ifelse(`%_beneficiaries` > 99.98, 100, `%_beneficiaries`)) %>% 
  select(governorate, district, communities, partners, 
         households, beneficiaries, total_usd, `%_beneficiaries`) %>% 
  flextable() %>% 
  set_caption("360,787 people reached, USD 10.9 million disbursed, 23 March 2023") %>% 
  theme_zebra() %>% 
  footnote(i = 1, j = 6, part = "header", ref_symbols = "a",
           as_paragraph("Beneficiary figures include only reported MPC with a minimum transfer value of USD 100")) %>% 
  footnote(i = 1, j = 8, part = "header", ref_symbols = "b",  
           as_paragraph("As percentage of all MPC beneficiaries reached in NW Syria")) %>% 
  fit_to_width(8, unit = "in") %>% 
  fontsize(size = 8, part = "header")

  
```

<br><br><br>


# 2. Map of MPC beneficiaries and collective/reception centres


<br>

Interactive elements do not work in a PDF. Click [here](https://northwest-syria-cash-working-group.github.io/nws_syria_cash_reporting/#map-of-mpc-beneficiaries-and-collectivereception-centres) to access the online version of this map. 

<br> 

```{r plotly-sites}

sites_locations_fsl %>% 
  left_join(locations %>% select(admin3pcode, admin4pcode), 
            by = "admin4pcode") %>%
  right_join(pcode3_shape, 
             by = c("admin3pcode" = "ADM3_PCODE")) %>% 
  filter(ADM1_PCODE %in% c("SY02", "SY07")) %>% 
  st_as_sf() %>% 
  mutate(type = fct_relevel(type, 
                            c("RC/IDP", "Beneficiaries"))) %>% 
  ggplot() + 
  geom_sf(size = 0.1, colour = "grey70") +
  geom_point(aes(size = persons, 
                  colour = type,
                  x = longitude_x, y = latitude_y,
                  text = paste0("sub_district: ", sub_district, "\n",
                                "site: ", site_name, "\n",  
                                "persons: ", persons, "\n", 
                                "type: ", type, "\n", 
                                "lon_x: ", longitude_x, "\n",                                 "lat_y: ", latitude_y)), 
             shape = 21, stroke = .2
             # Adjusting alpha won't affect a plotly
             ) +
  scale_size_continuous(labels = comma) +
  theme_void() + 
  theme(plot.background = element_rect(fill = "white", colour = NA), 
        plot.caption = element_text(hjust = 0.5), 
        legend.position = "none") +
  labs(title = "Collective/reception centres and MPC beneficiaries", 
       subtitle = "IDPs in red, beneficiaries in blue, size shows number of persons")


# Will this work? 
# %>% partial_bundle()

ggsave("site_map.png", dpi = 300, height = 8.27, width = 11.69, units = "in")
```


Data on cash response extracted from [FSL earthquake tracker](https://docs.google.com/spreadsheets/d/1KGqt-3YDh2k8qNCksOJAndRPO56Gq6pGs6esEQtIFIw/edit#gid=1890981115) on March 17 2023. Data on collective centres extracted from March 15 2023. 

A revised version of the map will be available for further reporting with the revised 4Ws that includes all available codes for temporay sites. 


<br><br>


# 3. Geographic breakdown of beneficiaries

Coverage is highest in Afrin and Harim districts, which have been worst-hit by the earthquake. 

<br>

```{r}
fsl %>% 
  filter(activity == "Cash Response" & planned_implemented == "Implemented") %>% 
  mutate(governorate = ifelse(governorate == "idleb", "Idleb", governorate),
         district = ifelse(district == "idleb", "Idleb", district)) %>% 
  group_by(governorate, district) %>% 
  summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>% 
  mutate(district = fct_reorder(district, beneficiaries), 
         governorate = fct_relevel(governorate, 
                                   c("Idlib", "Aleppo"))) %>% 
  ggplot(aes(x = beneficiaries, y = district)) + 
  geom_col(aes(fill = governorate)) + 
  geom_text(aes(label = comma(beneficiaries)), 
            hjust = "inward") + 
  scale_fill_viridis_d(begin = .3) + 
  labs(title = "MPC beneficiaries by district", 
       subtitle = "as of 23 March 2023", 
       y = "") + 
  scale_x_continuous(labels = comma) + 

hno %>% 
  filter(admin2name_en %in% c("Harim", "Idleb", "Jisr-Ash-Shugur",
                              "Afrin", "Jebel Saman", "A'zaz", "Jarablus", "Al Bab")) %>% 
  group_by(governorate = admin1name_en, district = admin2name_en) %>% 
  summarise(total_population = sum(total_population, na.rm = TRUE)) %>% 
  left_join(
    fsl %>%
      filter(activity == "Cash Response" & planned_implemented == "Implemented") %>% 
      mutate(governorate = ifelse(governorate == "idleb", "Idleb", governorate),
             district = ifelse(district == "idleb", "Idleb", district)) %>% 
      group_by(district) %>% 
      summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) ,  
  by = "district") %>% 
  mutate(district = fct_reorder(district, beneficiaries), 
         governorate = fct_relevel(governorate, 
                                   c("Idlib", "Aleppo")), 
         pc_reached = round(beneficiaries / total_population * 100, digits = 1)) %>% 
  ggplot(aes(x = pc_reached, y = district)) +
  geom_col(aes(fill = governorate)) + 
  geom_text(aes(label = comma(pc_reached)), 
            hjust = "inward") +
  scale_fill_viridis_d(begin = .3) + 
  labs(title = "Percent of population reached", 
       subtitle = "as of 23 March 2023", 
       y = "", 
       x = "% of population reached") +
  
  plot_layout(guides = "collect") & 
  theme(legend.position = "bottom")


```

<br>

The current distribution of beneficiaries appears to be aligned with the worst-hit districts: Harim and Afrin. The figures below only pertain to populations within the AOC of Northwest Syria and not representative of the entire district's population. 

<br>


```{r}
eq %>% 
  filter(admin3pcode %in% nw_pcode3 & 
           district %in% c("Harim", "Idleb", "Jisr-Ash-Shugur",
                              "Afrin", "Jebel Saman", "A'zaz", "Jarablus", "Al Bab")) %>% 
  group_by(governorate, district) %>% 
  summarise(casualties = sum(casualties, na.rm = TRUE), 
            injuries = sum(injuries, na.rm = TRUE), 
            totally_damaged = sum(completely_destroyed_houses, na.rm = TRUE), 
            partially_damaged = sum(damaged_unihabitable_houses, na.rm = TRUE)) %>%
  # Where is Ariha, and why is it showing up here
  filter(district != "Ariha") %>% 
  left_join(hno %>% 
              filter(admin3pcode %in% nw_pcode3 &
                       admin2name_en %in% c("Harim", "Idleb", "Jisr-Ash-Shugur",
                              "Afrin", "Jebel Saman", "A'zaz", "Jarablus", "Al Bab")) %>%
              group_by(district = admin2name_en) %>%
              summarise(population = sum(total_population, na.rm = TRUE)), by = "district") %>% 
  mutate(wounded_dead = casualties + injuries, 
         damaged_houses = totally_damaged + partially_damaged, 
         wounded_dead_100k = round(wounded_dead / population * 100000, digits = 2), 
         damaged_houses_100k = round(damaged_houses / population * 100000, digits = 2)) %>% 
  select(governorate, district, wounded_dead, wounded_dead_100k, 
         damaged_houses, damaged_houses_100k) %>% 
  flextable() %>% 
  theme_zebra() %>% 
  set_table_properties(layout = "autofit", width = .99) %>% 
  set_caption("Casualties and damaged houses, absolute figures and per 100,000 persons") %>% 
  footnote(i = 1, j = 3:6, part = "header",
           as_paragraph("Data from the Assistance Coordination Unit, Syria 20230307")) %>% 
  fit_to_width(8, unit = "in") %>% 
  fontsize(size = 8, part = "header")


```

<br>

When reviewing the district-level spread of casualties and totally- and partially-damaged houses, Harim and Afrin do stand out in terms of the magnitude of the damage. Notably, the share of damaged houses in Afrin is much higher than in Harim. 

Following them, Jebel Saman and Jisr-ash-Shugur have the next most severe damage, although, as can be seen from the table below, their populations (within the area of control) are comparatively smaller. 

Assessments are still ongoing and the CWG will update these tables when new data becomes available. 

<br>


```{r}

hno %>% 
  filter(admin2name_en %in% c("Harim", "Idleb", "Jisr-Ash-Shugur",
                              "Afrin", "Jebel Saman", "A'zaz", "Jarablus", "Al Bab") &
           ao_c == "NW") %>% 
  group_by(governorate = admin1name_en, district = admin2name_en) %>% 
  summarise(total_population = sum(total_population, na.rm = TRUE)) %>% 
  left_join(
    fsl %>%
      filter(activity == "Cash Response" & planned_implemented == "Implemented") %>% 
      mutate(governorate = ifelse(governorate == "idleb", "Idleb", governorate),
             district = ifelse(district == "idleb", "Idleb", district)) %>% 
      group_by(district) %>% 
      summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE), 
                partners = n_distinct(partner_code)) ,  
  by = "district") %>% 
  mutate(`%_reached` = round(beneficiaries / total_population * 100, digits = 2)) %>% 
  relocate(partners, .after = last_col()) %>% 
  flextable() %>% 
  theme_zebra() %>% 
  set_table_properties(layout = "autofit", width = .8) %>% 
  set_caption("Percentage of population reached by district") %>% 
  footnote(i = 1, j = 3, part = "header", inline = TRUE,
           as_paragraph(c("Total population of sub-districts within the NW AOC"))) %>% 
  fit_to_width(8, unit = "in") %>% 
  fontsize(size = 8, part = "header")
```

<br>

Although the earthquake damage is not as severe in A'zaz, Al Bab, Jarablus, Idleb and Jisr-ash-Shugur, a much higher proportion of needs in these areas remain unmet, given the low percentages of persons reached. 

The establishment of subnational targets at the district and sub-district level, will go some way towards clarifying how resources should be allocated across the affected areas. 


<br><br>

## 3.1 Breakdown by partner and district

Harim, by far and away has the highest concentration of partners (12), double that of the next highest district (Afrin). 

Interactive elements do not work in a PDF. Click [here](https://northwest-syria-cash-working-group.github.io/nws_syria_cash_reporting/#breakdown-by-partner-and-district) to access the online version of this plot.

<br>

```{r}


stack_text <- fsl %>% 
  filter(activity == "Cash Response" & planned_implemented == "Implemented") %>% 
  group_by(governorate, district) %>% 
  summarise(total = sum(beneficiaries, na.rm = TRUE)) %>% 
  mutate(district = fct_relevel(district, c("Harim", "Idleb", "Jisr-Ash-Shugur", 
  "Afrin", "Jebel Saman", "A'zaz", "Jarablus", "Al Bab")))

fsl %>% 
  filter(activity == "Cash Response" & planned_implemented == "Implemented") %>% 
  group_by(district, partner_code) %>% 
  summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>% 
  ungroup() %>%
  mutate(district = fct_relevel(district, c("Harim", "Idleb", "Jisr-Ash-Shugur",
                                            "Afrin", "Jebel Saman", "A'zaz", "Jarablus", "Al Bab")), 
         district = fct_rev(district)) %>%
  ggplot(aes(y = district, 
             x = beneficiaries)) +
  geom_col(aes(fill = partner_code)) + 
  geom_text(data = stack_text, 
            aes(x = total + 6000, 
                label = scales::comma(total))) + 
  scale_x_continuous(labels = comma) + 
  labs(y = "", 
       x = "Beneficiaries", 
       title = "Partner achievements by district, 20230317") + 
  theme(legend.position = "none")


```

<br><br>

## 3.2 Scatterplot of sub-districts 

The plot below shows the total population of each sub-district on the x-axis (for the moment, all persons in these areas are assumed to be affected and are included in the PIN) and the number of beneficiaries on the y-axis. 

The size of each point indicates the number of dead or wounded persons there per 100,000. 

<br>


```{r, dpi = 300, fig.height=6}
eq %>% 
  filter(admin3pcode %in% nw_pcode3 & 
           district %in% c("Harim", "Idleb", "Jisr-Ash-Shugur",
                              "Afrin", "Jebel Saman", "A'zaz", "Jarablus", "Al Bab")) %>% 
  group_by(governorate, district, sub_district, admin3pcode) %>% 
  summarise(casualties = sum(casualties, na.rm = TRUE), 
            injuries = sum(injuries, na.rm = TRUE), 
            totally_damaged = sum(completely_destroyed_houses, na.rm = TRUE), 
            partially_damaged = sum(damaged_unihabitable_houses, na.rm = TRUE)) %>%
  # Where is Ariha, and why is it showing up here
  filter(district != "Ariha") %>% 
  left_join(hno %>% 
              filter(admin3pcode %in% nw_pcode3 &
                       admin2name_en %in% c("Harim", "Idleb", "Jisr-Ash-Shugur",
                              "Afrin", "Jebel Saman", "A'zaz", "Jarablus", "Al Bab")) %>%
              group_by(admin3pcode) %>%
              summarise(population = sum(total_population, na.rm = TRUE)), 
            by = "admin3pcode") %>% 
  mutate(wounded_dead = casualties + injuries, 
         damaged_houses = totally_damaged + partially_damaged, 
         wounded_dead_100k = round(wounded_dead / population * 100000, digits = 2), 
         damaged_houses_100k = round(damaged_houses / population * 100000, digits = 2)) %>% 
    left_join(fsl %>% 
                filter(activity == "Cash Response" & planned_implemented == "Implemented") %>% 
                group_by(admin3pcode) %>% 
                summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)), 
              by = "admin3pcode") %>% 
  ggplot(aes(x = population, y = beneficiaries)) + 
  geom_point(aes(size = wounded_dead_100k)) + 
  geom_text_repel(aes(label = sub_district),
                   point.padding = .5, 
                   segment.color = "grey50", size = 3) +
  scale_x_log10(breaks = c(0, 3000, 10000, 30000, 100000, 300000, 1000000), 
                labels = comma) + 
  scale_y_log10(breaks = c(0, 1000, 3000, 10000, 30000, 100000),
                labels = comma) + 
  scale_size(breaks = c(0, 100, 500, 1000, 3000)) +
  geom_smooth(method = "lm", se = FALSE, colour = "blue", size = .5) +
  labs(title = "Population and MPC beneficiaries by sub-district",
       subtitle = "Size indicates dead/wounded per 100,0000", 
       x = "Population", 
       y = "Beneficiaries", 
       size = "Dead/wounded\nper 100k", 
       caption = "Data from Assistance Coordination Unit and Food Security and Livelihoods Cluster") +
  theme(plot.caption = element_text(hjust = .5))
```

<br>

Overall, we see fair alignment between the magnitude of the needs (total population) and the number of beneficiaries -- this is evidenced by the blue line showing a positive relationship. 

However, we do note several mismatches -- Dana seems to have received an outsized share of beneficiaries, especially when considering the casualty rate. And Kafr Takharim seems to have been allocated relatively fewer resources in comparison to the death toll there. The response in Dana may be explained by a number of variables outside the scope of the data collected by the earthquake response tracker, such as population movements. Did earthquake survivors displace to Dana with the knowledge that it was a well-served area, where a number of partners were already operational? The CWG will conduct more consultations with partners to understand such disparities.


<br><br><br>


# 4. Cash response actors and cash disbursed

In the scatterplot below, each point is a single cash working group partner. The x-axis indicates the number of beneficiaries reached per agency and the y-axis indicates the number of communities (admin4) reached. 

Interactive elements do not work in a PDF. Click [here](https://northwest-syria-cash-working-group.github.io/nws_syria_cash_reporting/#cash-response-actors-and-cash-disbursed) to access the online version of this plot.

<br>

```{r totals, eval = FALSE}

fsl %>% 
  filter(activity == "Cash Response" & planned_implemented == "Implemented") %>% 
  mutate(usd_total = families * quantity) %>% 
  summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE), 
            usd_total = sum(usd_total, na.rm = TRUE))

```



```{r partner-scatter}
fsl %>% 
   filter(activity == "Cash Response" & planned_implemented == "Implemented") %>% 
  group_by(partner_code, 
           admin2pcode, 
           admin4pcode) %>% 
  slice(which.max(beneficiaries)) %>% 
  ungroup() %>% 
  group_by(partner_code) %>% 
  summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE), 
            communities = n_distinct(admin4pcode)) %>% 
  ggplot(aes(x = beneficiaries, y = communities)) +
  geom_point(aes(size = beneficiaries, 
                 text = paste0(partner_code, "\n", 
                               "beneficiaries: ", format(beneficiaries, big.mark = ","), "\n", 
                               "communities: ", communities))) + 
  scale_x_log10(labels = comma) + 
  theme(legend.position = "none") + 
  labs(x = "Beneficiaries reached", 
       y = "Communities (admin4) reached", 
       title = "Implementing partners -- beneficiaries and communities reached")


```

<br>

USD `r paste(format(round((fsl %>% filter(activity == "Cash Response" & planned_implemented == "Implemented") %>% mutate(usd_total = families * quantity) %>%  {sum(.$usd_total)}) / 1000000, 1), trim = TRUE), "million")` has been distributed across `r fsl %>% filter(activity == "Cash Response" & planned_implemented == "Implemented") %>% {n_distinct(.$admin4pcode)}` communities and `r fsl %>% filter(activity == "Cash Response" & planned_implemented == "Implemented") %>% {n_distinct(.$admin3pcode)}` sub-districts in NW Syria.


The table below summarises the information in the scatterplot above in tabular form:

<br>



```{r}
fsl %>% 
  filter(activity == "Cash Response" & planned_implemented == "Implemented") %>% 
  group_by(partner_code, 
           admin2pcode, 
           admin4pcode) %>% 
  slice(which.max(beneficiaries)) %>% 
  ungroup() %>% 
  group_by(partner_code) %>% 
  summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE), 
            districts = n_distinct(admin2pcode), 
            communities = n_distinct(admin4pcode)) %>% 
  arrange(desc(beneficiaries)) %>% 
  flextable() %>% 
  set_caption("Reach and footprint of cash response actors") %>% 
  theme_zebra() %>% 
  set_table_properties(layout = "autofit", width = .8) %>% 
  footnote(as_paragraph("Only partners who provided more than USD 100/family/month"), 
           i = 1, j = 1, part = "header")
  
```



<br><br>



## 4.1 USD disbursed by partner

There is very good compliance with CWG standards on the transfer values of multipurpose cash interventions, as can be seen by the `usd_per_fam` column in the table below. 

<br>


```{r}
fsl %>% 
  filter(activity == "Cash Response" & planned_implemented == "Implemented") %>% 
  mutate(usd_total = families * quantity) %>% 
  group_by(partner_code) %>% 
  summarise(usd_total = sum(usd_total, na.rm = TRUE), 
            families = sum(families, na.rm = TRUE)) %>% 
  mutate(usd_per_fam = round(usd_total / families, digits = 2), 
         `%_usd_total` = round(usd_total / sum(usd_total) * 100, 
                             digits = 2)) %>%
  arrange(desc(usd_total)) %>% 
  flextable() %>% 
  set_caption("USD disbursed and families reached by partner") %>% 
  theme_zebra() %>% 
  flextable::set_table_properties(layout = "autofit", width = .8)
```


<br>

Below is a breakdown of beneficiaries and families reached by cash-based activities of all values, not just those that qualify as MPC. 

<br>

```{r}
fsl %>% 
  filter(unit == "USD" & planned_implemented == "Implemented") %>% 
  group_by(usd_transfer_value = quantity) %>% 
  summarise(families = sum(families, na.rm = TRUE),
            beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>% 
  mutate(`%_beneficiaries` = round(beneficiaries / sum(beneficiaries) * 100, digits = 2), 
         usd_transfer_value = paste0("$", usd_transfer_value)) %>% 
  flextable() %>% 
  theme_zebra() %>% 
  set_caption("USD transfer values for all cash-based activities, not just MPC") %>% 
  footnote(i = 1, j = 3, part = "header", 
           as_paragraph("Data from the FSL tracker, all cash response activities reported")) %>% 
  flextable::set_table_properties(layout = "autofit", width = .8)
```


<br><br><br>


# 5. UNHCR site tracker -- searchable table

<br>

Data from [UNHCR site tracker](https://docs.google.com/spreadsheets/d/1DDBvITdg5n4eC-l3m6WEaLE7290ez9hM/edit#gid=554801999). Extracted 15 March 2023. 

Interactive elements do not work in a PDF. Click [here](https://northwest-syria-cash-working-group.github.io/nws_syria_cash_reporting/#unhcr-site-tracker-searchable-table) to access the online version of this searchable table.

<br>

```{r dt, eval = FALSE}
sites %>% 
  select(governorate, 
         district, 
         sub_district, 
         community, 
         site_name, 
         longitude_x,
         latitude_y, 
         families, 
         individuals, 
         focal_point = organization_name, 
         focal_contact = phone, 
         pcode = temp_code) %>% 
  datatable(options = list(pageLength = 10, scrollX = TRUE), 
            filter = list(position = "top", clear = FALSE),
            caption = htmltools::tags$caption(style = 'caption-side: top; 
                                    text-align: center; font-size:120% ;',
                                    "Reference table -- Collective sites, list maintained by UNHCR")) %>% 
  formatStyle(0, target = "row", lineHeight = "80%", fontSize = "80%")
  
```


