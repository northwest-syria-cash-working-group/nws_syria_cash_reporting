`%out%` <- Negate(`%in%`)
# function for transposing df
transpose_df <- function(df) {
t_df <- data.table::transpose(df)
colnames(t_df) <- rownames(df)
rownames(t_df) <- colnames(df)
t_df <- t_df %>%
tibble::rownames_to_column(.data = .) %>%
tibble::as_tibble(.)
return(t_df)
}
# function beneficiary summaries
sum_ben <- function(df, column_var){
column_var <- enquo(column_var)
df %>%
group_by(!!column_var) %>% # must add bang-bang
summarise(beneficiaries = sum(new_beneficiaries, na.rm = TRUE)) %>%
arrange(desc(beneficiaries))
}
# function beneficiary summaries, 2 grouped variables
sum_ben2 <- function(df, column_var1, column_var2){
column_var1 <- enquo(column_var1)
column_var2 <- enquo(column_var2)
df %>%
group_by(!!column_var1, !!column_var2) %>% # must add bang-bang
summarise(beneficiaries = sum(new_beneficiaries, na.rm = TRUE), .groups = "drop")
}
# scaling functions
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
#mode function
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
knitr::opts_chunk$set(dev="png")
pcode3_shape
pcode3_shape <-
st_read("./data/syr_admbnda_uncs_unocha_20201217/syr_admbnda_adm3_uncs_unocha_20201217.shp",
quiet = TRUE)
locations <- read_excel("./data/Locations.xlsx") %>%
clean_names()
fsl <- read_csv("./data/for_report/fsl.csv") %>%
mutate(partner_code = ifelse(is.na(partner_code), "temp_1", partner_code))
sites <- read_csv("./data/for_report/sites.csv")
remove_sites <- read_csv("./data/for_report/sites_locations_fsl.csv") %>%
filter(!is.na(longitude_x) & !is.na(latitude_y)) %>%
st_as_sf(coords = c("longitude_x", "latitude_y"), crs = 4326) %>%
st_transform(st_crs(pcode3_shape)) %>%
mutate(intersection = as.integer(st_intersects(geometry, pcode3_shape)),
area = ifelse(is.na(intersection), "", pcode3_shape$ADM3_PCODE[intersection])) %>%
filter(is.na(intersection))
sites_locations_fsl <- read_csv("./data/for_report/sites_locations_fsl.csv") %>%
anti_join(remove_sites, by = c("site_name"))
pcode3_shape
pcode3_shape %>% glimpse(
)
sites_locations_fsl %>% glimpse()
pcode3_shape %>%
right_join(sites_locations_fsl,
by = c("ADM1_PCODE" = "admin1pcode"))
pcode3_shape %>%
right_join(sites_locations_fsl,
by = c("ADM1_PCODE" = "admin1pcode")) %>% glimpse()
sites_locations_fsl %>% glimpse()
pcode3_shape %>% glimpse()
sites_locations_fsl
right_join(sites_locations_fsl %>%
distinct(site_name),
by = c("ADM1_PCODE" = "admin1pcode")) %>% glimpse()
sites_locations_fsl %>%
distinct(site_name)
right_join(sites_locations_fsl %>%
unique(site_name),
by = c("ADM1_PCODE" = "admin1pcode")) %>% glimpse()
sites_locations_fsl
sites_locations_fsl %>% glimpse()
glimpse(locations)
sites_locations_fsl %>%
left_join(locations %>% select(admin3pcode, admin4pode),
by = "admin4pcode") %>%
right_join(pcode3_shape,
by = c("admin3pcode" = "ADM3_PCODE"))
sites_locations_fsl
sites_locations_fsl %>%
left_join(locations %>% select(admin3pcode, admin4pcode),
by = "admin4pcode") %>%
right_join(pcode3_shape,
by = c("admin3pcode" = "ADM3_PCODE"))
site_map <- sites_locations_fsl %>%
left_join(locations %>% select(admin3pcode, admin4pcode),
by = "admin4pcode") %>%
right_join(pcode3_shape,
by = c("admin3pcode" = "ADM3_PCODE")) %>%
filter(ADM1_PCODE %in% c("SY02", "SY07")) %>%
st_as_sf() %>%
mutate(type = fct_relevel(type,
c("RC/IDP", "Beneficiaries"))) %>%
ggplot() +
geom_sf(size = 0.1) +
geom_point(aes(size = persons,
colour = type,
x = longitude_x, y = latitude_y,
text = paste0("site :", site_name, "\n",
"persons: ", persons, "\n",
"type: ", type)), pch = 1
# Adjusting alpha won't affect a plotly
) +
scale_size_continuous(labels = comma) +
theme_void() +
theme(plot.background = element_rect(fill = "white", colour = NA),
plot.caption = element_text(hjust = 0.5),
legend.position = "none") +
labs(title = "Collective/reception centres and MPC beneficiaries",
subtitle = "IDPs in red, beneficiaries in blue, size shows number of persons")
ggplotly(site_map, tooltip = c("text")) %>%
plotly::style(hoveron = "point") %>%
layout(title = list(text = paste0("Collective/Reception centres and cash response beneficiaries",
"<br>",
"<sup>",
"IDPs in red, beneficiaries in blue, size shows number of persons; click and drag to zoom; mouse over for details"))) %>%
partial_bundle()
sites_locations_fsl %>%
left_join(locations %>% select(admin3pcode, admin4pcode),
by = "admin4pcode") %>%
right_join(pcode3_shape,
by = c("admin3pcode" = "ADM3_PCODE")) %>% glimpse()
site_map <- sites_locations_fsl %>%
left_join(locations %>% select(admin3pcode, admin4pcode),
by = "admin4pcode") %>%
right_join(pcode3_shape,
by = c("admin3pcode" = "ADM3_PCODE")) %>% glimpse()
fsl %>%
glimpse()
fsl %>%
filter(partner_code == "temp_1")
fsl <- read_csv("./data/for_report/fsl.csv") %>%
mutate(partner_code = ifelse(is.na(partner_code), "temp_1", partner_code))
site_map <- sites_locations_fsl %>%
left_join(locations %>% select(admin3pcode, admin4pcode),
by = "admin4pcode") %>%
right_join(pcode3_shape,
by = c("admin3pcode" = "ADM3_PCODE")) %>%
filter(ADM1_PCODE %in% c("SY02", "SY07")) %>%
st_as_sf() %>%
mutate(type = fct_relevel(type,
c("RC/IDP", "Beneficiaries"))) %>%
ggplot() +
geom_sf(size = 0.01) +
geom_point(aes(size = persons,
colour = type,
x = longitude_x, y = latitude_y,
text = paste0("sub_district: ", sub_district, "\n",
"site: ", site_name, "\n",
"persons: ", persons, "\n",
"type: ", type)), pch = 1
# Adjusting alpha won't affect a plotly
) +
scale_size_continuous(labels = comma) +
theme_void() +
theme(plot.background = element_rect(fill = "white", colour = NA),
plot.caption = element_text(hjust = 0.5),
legend.position = "none") +
labs(title = "Collective/reception centres and MPC beneficiaries",
subtitle = "IDPs in red, beneficiaries in blue, size shows number of persons")
ggplotly(site_map, tooltip = c("text")) %>%
plotly::style(hoveron = "point") %>%
layout(title = list(text = paste0("Collective/Reception centres and cash response beneficiaries",
"<br>",
"<sup>",
"IDPs in red, beneficiaries in blue, size shows number of persons; click and drag to zoom; mouse over for details"))) %>%
partial_bundle()
fsl %>%
filter(activity == "Cash Response" & planned_implemented == "Implemented") %>%
group_by(governorate, district) %>%
summarise(households = sum(families, na.rm = TRUE),
individuals = sum(beneficiaries, na.rm = TRUE),
partners = n_distinct(partner_code))
fsl %>%
filter(activity == "Cash Response" & planned_implemented == "Implemented") %>%
mutate(usd_total = families * quantity) %>%
group_by(governorate, district) %>%
summarise(partners = n_distinct(partner_code),
households = sum(families, na.rm = TRUE),
individuals = sum(beneficiaries, na.rm = TRUE),
total_usd = sum(usd_total, na.rm = TRUE)) %>%
mutate(`%_ben` = individuals / sum(individuals, na.rm = TRUE),)
fsl %>%
filter(activity == "Cash Response" & planned_implemented == "Implemented") %>%
mutate(usd_total = families * quantity) %>%
group_by(governorate, district) %>%
summarise(partners = n_distinct(partner_code),
households = sum(families, na.rm = TRUE),
individuals = sum(beneficiaries, na.rm = TRUE),
total_usd = sum(usd_total, na.rm = TRUE)) %>%
mutate(`%_ben` = round(individuals / sum(individuals, na.rm = TRUE), digits = 2))
fsl %>%
filter(activity == "Cash Response" & planned_implemented == "Implemented") %>%
mutate(usd_total = families * quantity) %>%
group_by(governorate, district) %>%
summarise(partners = n_distinct(partner_code),
households = sum(families, na.rm = TRUE),
individuals = sum(beneficiaries, na.rm = TRUE),
total_usd = sum(usd_total, na.rm = TRUE)) %>%
mutate(`%_ben` = round(individuals / sum(individuals, na.rm = TRUE) * 100, digits = 2))
fsl %>%
filter(activity == "Cash Response" & planned_implemented == "Implemented") %>%
mutate(usd_total = families * quantity) %>%
group_by(governorate, district) %>%
summarise(partners = n_distinct(partner_code),
households = sum(families, na.rm = TRUE),
individuals = sum(beneficiaries, na.rm = TRUE),
total_usd = sum(usd_total, na.rm = TRUE)) %>%
ungroup() %>%
mutate(`%_ben` = round(individuals / sum(individuals, na.rm = TRUE) * 100, digits = 2))
knitr::opts_chunk$set(echo = FALSE, fig.width=9, message = FALSE, warning=FALSE)
library(tidyverse)
library(readxl)
library(lubridate)
library(stringi)
library(pander)
library(janitor)
library(scales)
library(magrittr)
library(viridis)
library(patchwork)
library(DT)
library(sf)
library(plotly)
library(flextable)
library(ggrastr)
library(htmlwidgets)
theme_set(theme_light())
# disabling scientific notation
options(scipen = 100)
# pander tables all in one row
panderOptions('table.split.table', Inf)
# pander thousands separator
panderOptions("big.mark", ",")
# replace
opts <- options(knitr.kable.NA = "")
`%out%` <- Negate(`%in%`)
# function for transposing df
transpose_df <- function(df) {
t_df <- data.table::transpose(df)
colnames(t_df) <- rownames(df)
rownames(t_df) <- colnames(df)
t_df <- t_df %>%
tibble::rownames_to_column(.data = .) %>%
tibble::as_tibble(.)
return(t_df)
}
# function beneficiary summaries
sum_ben <- function(df, column_var){
column_var <- enquo(column_var)
df %>%
group_by(!!column_var) %>% # must add bang-bang
summarise(beneficiaries = sum(new_beneficiaries, na.rm = TRUE)) %>%
arrange(desc(beneficiaries))
}
# function beneficiary summaries, 2 grouped variables
sum_ben2 <- function(df, column_var1, column_var2){
column_var1 <- enquo(column_var1)
column_var2 <- enquo(column_var2)
df %>%
group_by(!!column_var1, !!column_var2) %>% # must add bang-bang
summarise(beneficiaries = sum(new_beneficiaries, na.rm = TRUE), .groups = "drop")
}
# scaling functions
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
#mode function
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
knitr::opts_chunk$set(dev="png")
pcode3_shape <-
st_read("./data/syr_admbnda_uncs_unocha_20201217/syr_admbnda_adm3_uncs_unocha_20201217.shp",
quiet = TRUE)
locations <- read_excel("./data/Locations.xlsx") %>%
clean_names()
fsl <- read_csv("./data/for_report/fsl.csv") %>%
mutate(partner_code = ifelse(is.na(partner_code), "temp_1", partner_code))
sites <- read_csv("./data/for_report/sites.csv")
remove_sites <- read_csv("./data/for_report/sites_locations_fsl.csv") %>%
filter(!is.na(longitude_x) & !is.na(latitude_y)) %>%
st_as_sf(coords = c("longitude_x", "latitude_y"), crs = 4326) %>%
st_transform(st_crs(pcode3_shape)) %>%
mutate(intersection = as.integer(st_intersects(geometry, pcode3_shape)),
area = ifelse(is.na(intersection), "", pcode3_shape$ADM3_PCODE[intersection])) %>%
filter(is.na(intersection))
sites_locations_fsl <- read_csv("./data/for_report/sites_locations_fsl.csv") %>%
anti_join(remove_sites, by = c("site_name"))
fsl %>%
filter(activity == "Cash Response" & planned_implemented == "Implemented") %>%
mutate(usd_total = families * quantity) %>%
group_by(governorate, district) %>%
summarise(partners = n_distinct(partner_code),
households = sum(families, na.rm = TRUE),
individuals = sum(beneficiaries, na.rm = TRUE),
total_usd = sum(usd_total, na.rm = TRUE)) %>%
ungroup() %>%
mutate(`%_reached` = round(individuals / sum(individuals, na.rm = TRUE) * 100, digits = 2)) %>%
adorn_totals("row",,,, households, individuals, total_usd, `%_reached`)
fsl %>%
filter(activity == "Cash Response" & planned_implemented == "Implemented") %>%
mutate(usd_total = families * quantity) %>%
group_by(governorate, district) %>%
summarise(partners = n_distinct(partner_code),
households = sum(families, na.rm = TRUE),
individuals = sum(beneficiaries, na.rm = TRUE),
total_usd = sum(usd_total, na.rm = TRUE)) %>%
ungroup() %>%
mutate(`%_reached` = round(individuals / sum(individuals, na.rm = TRUE) * 100, digits = 2)) %>%
adorn_totals("row",,,, households, individuals, total_usd, `%_reached`) %>%
flextable() %>%
set_caption("308,467 people reached, USD 9.4 million disbursed, 20230317") %>%
theme_zebra()
fsl %>%
filter(activity == "Cash Response" & planned_implemented == "Implemented") %>%
mutate(usd_total = families * quantity) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE),
usd_total = sum(usd_total, na.rm = TRUE))
fsl %>%
filter(activity == "Cash Response" & planned_implemented == "Implemented") %>%
group_by(partner_code,
admin2pcode,
admin4pcode) %>%
slice(which.max(beneficiaries)) %>%
ungroup() %>%
group_by(partner_code) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE),
districts = n_distinct(admin2pcode),
communities = n_distinct(admin4pcode)) %>%
arrange(desc(beneficiaries)) %>%
flextable() %>%
set_caption("Summary table -- top 10 cash response actors") %>%
theme_zebra() %>%
set_table_properties(layout = "autofit", width = .8) %>%
footnote(as_paragraph("Only partners who provided more than USD 100/family/month"),
i = 1, j = 1, part = "header")
fsl %>%
filter(activity == "Cash Response" & planned_implemented == "Implemented") %>%
mutate(usd_total = families * quantity) %>%
group_by(governorate, district) %>%
summarise(partners = n_distinct(partner_code),
households = sum(families, na.rm = TRUE),
beneficiaries = sum(beneficiaries, na.rm = TRUE),
total_usd = sum(usd_total, na.rm = TRUE)) %>%
ungroup() %>%
mutate(`%_reached` = round(beneficiaries / sum(beneficiaries, na.rm = TRUE) * 100, digits = 2)) %>%
adorn_totals("row",,,, households, beneficiaries, total_usd, `%_reached`) %>%
mutate(`%_beneficiaries` = ifelse(`%_beneficiaries` > 99.98, 100, `%_beneficiaries`)) %>%
flextable() %>%
set_caption("308,467 people reached, USD 9.4 million disbursed, 20230317") %>%
theme_zebra()
fsl %>%
filter(activity == "Cash Response" & planned_implemented == "Implemented") %>%
mutate(usd_total = families * quantity) %>%
group_by(governorate, district) %>%
summarise(partners = n_distinct(partner_code),
households = sum(families, na.rm = TRUE),
beneficiaries = sum(beneficiaries, na.rm = TRUE),
total_usd = sum(usd_total, na.rm = TRUE)) %>%
ungroup() %>%
mutate(`%_beneficiaries` =
round(beneficiaries / sum(beneficiaries, na.rm = TRUE) * 100, digits = 2)) %>%
adorn_totals("row",,,, households, beneficiaries, total_usd, `%_reached`) %>%
mutate(`%_beneficiaries` = ifelse(`%_beneficiaries` > 99.98, 100, `%_beneficiaries`)) %>%
flextable() %>%
set_caption("308,467 people reached, USD 9.4 million disbursed, 20230317") %>%
theme_zebra()
fsl %>%
filter(activity == "Cash Response" & planned_implemented == "Implemented") %>%
mutate(usd_total = families * quantity) %>%
group_by(governorate, district) %>%
summarise(partners = n_distinct(partner_code),
households = sum(families, na.rm = TRUE),
beneficiaries = sum(beneficiaries, na.rm = TRUE),
total_usd = sum(usd_total, na.rm = TRUE)) %>%
ungroup() %>%
mutate(`%_beneficiaries` =
round(beneficiaries / sum(beneficiaries, na.rm = TRUE) * 100, digits = 2)) %>%
adorn_totals("row",,,, households, beneficiaries, total_usd, `%_beneficiaries`) %>%
mutate(`%_beneficiaries` = ifelse(`%_beneficiaries` > 99.98, 100, `%_beneficiaries`)) %>%
flextable() %>%
set_caption("308,467 people reached, USD 9.4 million disbursed, 20230317") %>%
theme_zebra()
fsl %>%
filter(activity == "Cash Response" & planned_implemented == "Implemented") %>%
mutate(usd_total = families * quantity) %>%
group_by(governorate, district) %>%
summarise(partners = n_distinct(partner_code),
communities = n_distinct(admin4pcode),
households = sum(families, na.rm = TRUE),
beneficiaries = sum(beneficiaries, na.rm = TRUE),
total_usd = sum(usd_total, na.rm = TRUE)) %>%
ungroup() %>%
mutate(`%_beneficiaries` =
round(beneficiaries / sum(beneficiaries, na.rm = TRUE) * 100, digits = 2)) %>%
adorn_totals("row",,,, households, beneficiaries, total_usd, `%_beneficiaries`) %>%
mutate(`%_beneficiaries` = ifelse(`%_beneficiaries` > 99.98, 100, `%_beneficiaries`)) %>%
flextable() %>%
set_caption("308,467 people reached, USD 9.4 million disbursed, 20230317") %>%
theme_zebra()
fsl %>%
filter(activity == "Cash Response" & planned_implemented == "Implemented") %>%
group_by(district, partner_code) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
ggplot(aes(x = district, y = beneficiaries)) +
geom_col(aes(fill = partner_code))
fsl %>%
filter(activity == "Cash Response" & planned_implemented == "Implemented") %>%
group_by(district, partner_code) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
ggplot(aes(x = fct_relevel(district,
c("Afrin", "Al Bab", "A'zaz", "Jarablus",
"Jebel Saman", "Harim", "Idleb", "Jisr-Ash-Shugur")),
y = beneficiaries)) +
geom_col(aes(fill = partner_code))
fsl %>%
filter(activity == "Cash Response" & planned_implemented == "Implemented") %>%
group_by(district, partner_code) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
ggplot(aes(x = fct_relevel(district,
c("Afrin", "Al Bab", "A'zaz", "Jarablus",
"Jebel Saman", "Harim", "Idleb", "Jisr-Ash-Shugur")),
y = beneficiaries)) +
geom_col(aes(fill = partner_code)) +
scale_y_continuous(labels = comma) +
labs(x = "Districts",
y = "Beneficiaries") +
theme(legend.position = "none")
fsl %>%
filter(activity == "Cash Response" & planned_implemented == "Implemented") %>%
group_by(district, partner_code) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
ggplot(aes(x = fct_relevel(district,
c("Afrin", "Al Bab", "A'zaz", "Jarablus",
"Jebel Saman", "Harim", "Idleb", "Jisr-Ash-Shugur")),
y = beneficiaries)) +
geom_col(aes(fill = partner_code)) +
scale_y_continuous(labels = comma) +
labs(x = "Districts",
y = "Beneficiaries",
title = "Partner achievements by district") +
theme(legend.position = "none")
stack <- fsl %>%
filter(activity == "Cash Response" & planned_implemented == "Implemented") %>%
group_by(district, partner_code) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
ggplot(aes(x = fct_relevel(district,
c("Afrin", "Al Bab", "A'zaz", "Jarablus",
"Jebel Saman", "Harim", "Idleb", "Jisr-Ash-Shugur")),
y = beneficiaries)) +
geom_col(aes(fill = partner_code)) +
scale_y_continuous(labels = comma) +
labs(x = "Districts",
y = "Beneficiaries",
title = "Partner achievements by district, 20230317") +
theme(legend.position = "none")
ggplotly(stack, tooltip = c("fill", "x", "y"))
stack <- fsl %>%
filter(activity == "Cash Response" & planned_implemented == "Implemented") %>%
group_by(district, partner_code) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
mutate(district = fct_relevel(district,
c("Afrin", "Al Bab", "A'zaz", "Jarablus",
"Jebel Saman", "Harim", "Idleb", "Jisr-Ash-Shugur"))) %>%
ggplot(aes(x = district,
y = beneficiaries)) +
geom_col(aes(fill = partner_code)) +
scale_y_continuous(labels = comma) +
labs(x = "Districts",
y = "Beneficiaries",
title = "Partner achievements by district, 20230317") +
theme(legend.position = "none")
ggplotly(stack, tooltip = c("fill", "x", "y"))
fsl %>%
filter(activity == "Cash Response" & planned_implemented == "Implemented") %>%
group_by(district) %>%
summarise(total = sum(beneficiaries, na.rm = TRUE)) %>%
mutate(district = fct_relevel(district,
c("Afrin", "Al Bab", "A'zaz", "Jarablus",
"Jebel Saman", "Harim", "Idleb", "Jisr-Ash-Shugur")))
stack_text <- fsl %>%
filter(activity == "Cash Response" & planned_implemented == "Implemented") %>%
group_by(district) %>%
summarise(total = sum(beneficiaries, na.rm = TRUE)) %>%
mutate(district = fct_relevel(district,
c("Afrin", "Al Bab", "A'zaz", "Jarablus",
"Jebel Saman", "Harim", "Idleb", "Jisr-Ash-Shugur")))
stack <- fsl %>%
filter(activity == "Cash Response" & planned_implemented == "Implemented") %>%
group_by(district, partner_code) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
mutate(district = fct_relevel(district,
c("Afrin", "Al Bab", "A'zaz", "Jarablus",
"Jebel Saman", "Harim", "Idleb", "Jisr-Ash-Shugur"))) %>%
ggplot(aes(x = district,
y = beneficiaries)) +
geom_col(aes(fill = partner_code)) +
geom_text(data = stack_text,
aes(y = total + 6000,
label = scales::comma(total))) +
scale_y_continuous(labels = comma) +
labs(x = "",
y = "Beneficiaries",
title = "Partner achievements by district, 20230317") +
theme(legend.position = "none")
ggplotly(stack, tooltip = c("fill", "x", "y"))
